{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\UNITBRASIL\\\\Documents\\\\hunter\\\\rocketseat bootcamp\\\\Frontend\\\\react\\\\git\\\\src\\\\pages\\\\Dashboard\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { FiChevronRight } from 'react-icons/fi';\nimport api from '../../services/api';\nimport Logo from \"../../assets/logo.svg\";\nimport { Title, Form, Repositories } from './styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Dashboard = () => {\n  _s();\n\n  const [newRepo, setNewRepo] = useState('');\n  const [repositories, setRepositories] = useState([]);\n\n  async function handleAddRepository(event) {\n    event.preventDefault();\n    const response = await api.get(`repos/${newRepo}`);\n    const repository = response.data;\n    setRepositories([...repositories, repository]);\n    console.log(response.data);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: Logo,\n      alt: \"Github explorer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Title, {\n      children: \" Explore reposit\\xF3rios do github \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleAddRepository,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: newRepo,\n        onChange: e => setNewRepo(e.target.value),\n        placeholder: \"Digite aqui o nome do reposit\\xF3rio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Pesquisar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Repositories, {\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"teste\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"https://avatars.githubusercontent.com/u/67030481?v=4\",\n          alt: \"Wiliamis Oliveira\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"rocketseat uniform\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Bootcamp\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FiChevronRight, {\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Dashboard, \"9YWBVAaaWt2rSNmbXjgX8puY7YM=\");\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["C:/Users/UNITBRASIL/Documents/hunter/rocketseat bootcamp/Frontend/react/git/src/pages/Dashboard/index.tsx"],"names":["React","useState","FiChevronRight","api","Title","Form","Repositories","Dashboard","newRepo","setNewRepo","repositories","setRepositories","handleAddRepository","event","preventDefault","response","get","repository","data","console","log","Logo","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAA2C,OAA3C;AACA,SAASC,cAAT,QAA+B,gBAA/B;AACA,OAAOC,GAAP,MAAgB,oBAAhB;;AAGA,SAASC,KAAT,EAAgBC,IAAhB,EAAsBC,YAAtB,QAA0C,UAA1C;;;;AAIA,MAAMC,SAAmB,GAAG,MAAM;AAAA;;AAChC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACS,YAAD,EAAeC,eAAf,IAAkCV,QAAQ,CAAe,EAAf,CAAhD;;AAEA,iBAAeW,mBAAf,CAAmCC,KAAnC,EAAqF;AACnFA,IAAAA,KAAK,CAACC,cAAN;AAEA,UAAMC,QAAQ,GAAG,MAAMZ,GAAG,CAACa,GAAJ,CAAS,SAAQR,OAAQ,EAAzB,CAAvB;AAEA,UAAMS,UAAU,GAAGF,QAAQ,CAACG,IAA5B;AAEAP,IAAAA,eAAe,CAAC,CAAC,GAAGD,YAAJ,EAAkBO,UAAlB,CAAD,CAAf;AAEAE,IAAAA,OAAO,CAACC,GAAR,CAAYL,QAAQ,CAACG,IAArB;AACD;;AAED,sBACE;AAAA,4BACE;AAAK,MAAA,GAAG,EAAEG,IAAV;AAAgB,MAAA,GAAG,EAAC;AAApB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAIE,QAAC,IAAD;AAAM,MAAA,QAAQ,EAAET,mBAAhB;AAAA,8BAEE;AACE,QAAA,KAAK,EAAEJ,OADT;AAEE,QAAA,QAAQ,EAAGc,CAAD,IAAOb,UAAU,CAACa,CAAC,CAACC,MAAF,CAASC,KAAV,CAF7B;AAIE,QAAA,WAAW,EAAC;AAJd;AAAA;AAAA;AAAA;AAAA,cAFF,eAOE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAcE,QAAC,YAAD;AAAA,6BACE;AAAG,QAAA,IAAI,EAAC,OAAR;AAAA,gCACE;AAAK,UAAA,GAAG,EAAC,sDAAT;AAAgE,UAAA,GAAG,EAAC;AAApE;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAOE,QAAC,cAAD;AAAgB,UAAA,IAAI,EAAE;AAAtB;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAdF;AAAA,kBADF;AA8BD,CA9CD;;GAAMjB,S;;KAAAA,S;AAiDN,eAAeA,SAAf","sourcesContent":["import React, { useState, FormEvent } from 'react';\nimport { FiChevronRight } from 'react-icons/fi';\nimport api from '../../services/api';\n\nimport Logo from '../../assets/logo.svg';\nimport { Title, Form, Repositories } from './styles';\n\n\n\nconst Dashboard: React.FC = () => {\n  const [newRepo, setNewRepo] = useState('');\n  const [repositories, setRepositories] = useState<Repository[]>([]);\n\n  async function handleAddRepository(event: FormEvent<HTMLFormElement>): Promise<void> {\n    event.preventDefault();\n\n    const response = await api.get(`repos/${newRepo}`);\n\n    const repository = response.data;\n\n    setRepositories([...repositories, repository])\n\n    console.log(response.data);\n  }\n\n  return (\n    <>\n      <img src={Logo} alt=\"Github explorer\" />\n      <Title> Explore repositórios do github </Title>\n\n      <Form onSubmit={handleAddRepository}>\n\n        <input\n          value={newRepo}\n          onChange={(e) => setNewRepo(e.target.value)}\n\n          placeholder=\"Digite aqui o nome do repositório\" />\n        <button type=\"submit\">Pesquisar</button>\n      </Form>\n\n      <Repositories >\n        <a href=\"teste\">\n          <img src=\"https://avatars.githubusercontent.com/u/67030481?v=4\" alt=\"Wiliamis Oliveira\" />\n          <div>\n            <strong>rocketseat uniform</strong>\n            <p>Bootcamp</p>\n          </div>\n\n          <FiChevronRight size={20} />\n        </a>\n\n      </Repositories>\n\n    </>\n  )\n};\n\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}